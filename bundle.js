/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var t={421:()=>{var t=document.querySelectorAll(".grid");function e(e,r){t[r].appendChild(e)}!function(){for(var r=0;r<10;r++)for(var n=r,o=0;o<10;o++)for(var a=o,i=0;i<t.length;i++)e((c=n,l=a,u=void 0,(u=document.createElement("div")).classList.add("grid-elem"),u.setAttribute("data-coordinates","".concat(c,", ").concat(l)),u),i);var c,l,u}()},144:(t,e,r)=>{"use strict";r.d(e,{A:()=>c});var n=r(354),o=r.n(n),a=r(314),i=r.n(a)()(o());i.push([t.id,"*,*::before,*::after{box-sizing:border-box;margin:0;padding:0;font:inherit}html{font-family:basic-sans,sans-serif}img,picture,svg,video{display:block;max-width:100%}body{min-height:100vh;width:100%}.modal{position:absolute;margin:auto;min-width:15rem;width:25rem;min-height:10rem;height:11rem}.dialog-btn{height:5rem;width:40%;font-size:clamp(.5rem,5vw,1rem)}.dialog-btn-container{width:100%;height:100%;display:flex;margin:auto;justify-content:center;align-items:center;gap:1rem}.main-container{display:flex;flex-direction:column}.status-bar{height:1rem;border:1px dashed green}.game-container{display:flex;justify-content:center;gap:1rem}.player-container{display:flex;gap:1rem}.ship-container{width:100px}.grid-container{display:flex;flex-direction:column;gap:5px}.grid-title{width:100%;text-align:center}.grid-elem{border:1px solid red}.grid{display:grid;grid-template-rows:repeat(10, 1.5rem);grid-template-columns:repeat(10, 1.5rem);gap:1px}.ship-container{display:flex;gap:1rem;flex-direction:column}.ships{display:flex;flex-direction:column;gap:.5rem;padding-top:2rem}.ship-elem{width:5rem;height:1rem;border:1px dashed blue}.ship-elem p{font-size:.8rem;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;width:100%}.ui-btn-container{display:flex;justify-content:center;gap:1rem}.dragging{opacity:.4;background:red}.dragover{background:gray}.filled{background:teal}.occupied{background:red}.hover{background:gray}.attacked{background-color:teal}.attacked.hit{background-color:red}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AACA,qBACI,qBAAA,CACA,QAAA,CACA,SAAA,CACA,YAAA,CAGJ,KACI,iCAAA,CAGJ,sBACI,aAAA,CACA,cAAA,CAGJ,KACI,gBAAA,CACA,UAAA,CAMJ,OACI,iBAAA,CACA,WAAA,CACA,eAAA,CACA,WAAA,CACA,gBAAA,CACA,YAAA,CAGJ,YACI,WAAA,CACA,SAAA,CACA,+BAAA,CAGJ,sBACI,UAAA,CACA,WAAA,CACA,YAAA,CACA,WAAA,CACA,sBAAA,CACA,kBAAA,CACA,QAAA,CAIJ,gBACI,YAAA,CACA,qBAAA,CAIJ,YACI,WAAA,CAEA,uBAAA,CAIJ,gBACI,YAAA,CACA,sBAAA,CACA,QAAA,CAIJ,kBACI,YAAA,CACA,QAAA,CAGJ,gBACI,WAAA,CAIJ,gBACI,YAAA,CACA,qBAAA,CACA,OAAA,CAGJ,YACI,UAAA,CACA,iBAAA,CAGJ,WACI,oBAAA,CAGJ,MACI,YAAA,CACA,qCAAA,CACA,wCAAA,CACA,OAAA,CAKJ,gBACI,YAAA,CACA,QAAA,CACA,qBAAA,CAGJ,OACI,YAAA,CACA,qBAAA,CACA,SAAA,CACA,gBAAA,CAGJ,WACI,UAAA,CACA,WAAA,CACA,sBAAA,CAKJ,aACI,eAAA,CACA,kBAAA,CACA,eAAA,CACA,sBAAA,CACA,UAAA,CAMJ,kBACI,YAAA,CACA,sBAAA,CACA,QAAA,CAOJ,UACI,UAAA,CACA,cAAA,CAGJ,UACI,eAAA,CAGJ,QACI,eAAA,CAGJ,UACI,cAAA,CAMJ,OACI,eAAA,CAGJ,UACI,qBAAA,CAGJ,cACI,oBAAA",sourcesContent:["/* CSS reset */\n*, *::before, *::after {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    font: inherit;\n}\n\nhtml {\n    font-family: basic-sans, sans-serif;\n}\n\nimg, picture, svg, video{\n    display: block;\n    max-width: 100%;\n}\n\nbody {\n    min-height: 100vh;\n    width: 100%;\n}\n\n/* CSS starts here */\n\n/* dialog */\n.modal {\n    position: absolute;\n    margin: auto;\n    min-width: 15rem;\n    width: 25rem;\n    min-height: 10rem;\n    height: 11rem;\n}\n\n.dialog-btn {\n    height: 5rem;\n    width: 40%;\n    font-size: clamp(0.5rem, 5vw, 1rem);\n}\n\n.dialog-btn-container {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    margin: auto;\n    justify-content: center;\n    align-items: center;\n    gap: 1rem;\n}\n\n/* main-container */\n.main-container{\n    display: flex;\n    flex-direction: column;\n}\n\n/* status-container */\n.status-bar {\n    height: 1rem;\n\n    border: 1px dashed green;\n}\n\n/* game container */\n.game-container{\n    display: flex;\n    justify-content: center;\n    gap: 1rem;\n}\n\n/* player container && ship container*/\n.player-container {\n    display: flex;\n    gap: 1rem;\n}\n\n.ship-container {\n    width: 100px /* temp value */\n}\n\n/* grid */\n.grid-container {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n.grid-title {\n    width: 100%;\n    text-align: center;\n}\n\n.grid-elem  {\n    border: 1px solid red;\n}\n\n.grid {\n    display: grid;\n    grid-template-rows: repeat(10, 1.5rem) ;\n    grid-template-columns: repeat(10, 1.5rem) ;\n    gap: 1px;\n}\n\n/* game-container > player container > ship container > ship-elems */\n\n.ship-container {\n    display: flex;\n    gap: 1rem;\n    flex-direction: column;\n}\n\n.ships {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n    padding-top: 2rem;\n}\n\n.ship-elem {\n    width: 5rem;\n    height: 1rem;\n    border: 1px dashed blue;\n\n\n}\n\n.ship-elem p {\n    font-size: 0.8rem;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    width: 100%;\n}\n\n\n/* ui buttons */\n\n.ui-btn-container {\n    display: flex;\n    justify-content: center;\n    gap: 1rem;\n}\n\ndiv[draggable] {\n}\n\n/* draggable elements */\n.dragging {\n    opacity: 0.4;\n    background: red;\n}\n\n.dragover {\n    background: gray;\n}\n\n.filled {\n    background: teal\n}\n\n.occupied {\n    background: red;\n}\n\n\n/* game events */\n\n.hover {\n    background: gray\n}\n\n.attacked {\n    background-color: teal;\n}\n\n.attacked.hit {\n    background-color: red;\n}"],sourceRoot:""}]);const c=i},314:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var r="",n=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),n&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=t(e),n&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(t,r,n,o,a){"string"==typeof t&&(t=[[null,t,void 0]]);var i={};if(n)for(var c=0;c<this.length;c++){var l=this[c][0];null!=l&&(i[l]=!0)}for(var u=0;u<t.length;u++){var s=[].concat(t[u]);n&&i[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),r&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=r):s[2]=r),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),e.push(s))}},e}},354:t=>{"use strict";t.exports=function(t){var e=t[1],r=t[3];if(!r)return e;if("function"==typeof btoa){var n=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(n),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},72:t=>{"use strict";var e=[];function r(t){for(var r=-1,n=0;n<e.length;n++)if(e[n].identifier===t){r=n;break}return r}function n(t,n){for(var a={},i=[],c=0;c<t.length;c++){var l=t[c],u=n.base?l[0]+n.base:l[0],s=a[u]||0,d="".concat(u," ").concat(s);a[u]=s+1;var f=r(d),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==f)e[f].references++,e[f].updater(p);else{var h=o(p,n);n.byIndex=c,e.splice(c,0,{identifier:d,updater:h,references:1})}i.push(d)}return i}function o(t,e){var r=e.domAPI(e);return r.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;r.update(t=e)}else r.remove()}}t.exports=function(t,o){var a=n(t=t||[],o=o||{});return function(t){t=t||[];for(var i=0;i<a.length;i++){var c=r(a[i]);e[c].references--}for(var l=n(t,o),u=0;u<a.length;u++){var s=r(a[u]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}a=l}}},659:t=>{"use strict";var e={};t.exports=function(t,r){var n=function(t){if(void 0===e[t]){var r=document.querySelector(t);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(t){r=null}e[t]=r}return e[t]}(t);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(r)}},540:t=>{"use strict";t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},56:(t,e,r)=>{"use strict";t.exports=function(t){var e=r.nc;e&&t.setAttribute("nonce",e)}},825:t=>{"use strict";t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(r){!function(t,e,r){var n="";r.supports&&(n+="@supports (".concat(r.supports,") {")),r.media&&(n+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(n+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),n+=r.css,o&&(n+="}"),r.media&&(n+="}"),r.supports&&(n+="}");var a=r.sourceMap;a&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(n,t,e.options)}(e,t,r)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},113:t=>{"use strict";t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function r(n){var o=e[n];if(void 0!==o)return o.exports;var a=e[n]={id:n,exports:{}};return t[n](a,a.exports,r),a.exports}r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.nc=void 0,(()=>{"use strict";var t=r(72),e=r.n(t),n=r(825),o=r.n(n),a=r(659),i=r.n(a),c=r(56),l=r.n(c),u=r(540),s=r.n(u),d=r(113),f=r.n(d),p=r(144),h={};function y(t){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},y(t)}function m(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,v(n.key),n)}}function v(t){var e=function(t,e){if("object"!=y(t)||!t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!=y(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==y(e)?e:e+""}h.styleTagTransform=f(),h.setAttributes=l(),h.insert=i().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=s(),e()(p.A,h),p.A&&p.A.locals&&p.A.locals;var A=function(){return t=function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.grid=[[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0]]},(e=[{key:"placeShip",value:function(t,e,r){this.grid[e][r]=t}},{key:"removeShip",value:function(t,e){this.grid[t][e]=0}},{key:"receiveAttack",value:function(t,e){return"object"===y(this.grid[t][e])&&(this.grid[t][e].hit(),!0)}},{key:"scanBoard",value:function(){for(var t=[],e=0;e<this.grid.length;e++)for(var r=this.grid[e],n=0;n<r.length;n++)if("object"===y(r[n])){var o=[e,n];t.push(o)}return!(t.length>0)}},{key:"placeRandomShip",value:function(t){var e=Math.floor(10*Math.random()),r=Math.floor(10*Math.random());if(0===Math.floor(2*Math.random())){for(var n=0;n<t.length;n++){var o=r+n;if(o>9)return this.placeRandomShip(t);if(0!==this.grid[e][o])return this.placeRandomShip(t)}for(var a=0;a<t.length;a++)this.grid[e][r+a]=t}else{for(var i=0;i<t.length;i++){var c=e+i;if(c>9)return this.placeRandomShip(t);if(0!==this.grid[c][r])return this.placeRandomShip(t)}for(var l=0;l<t.length;l++)this.grid[e+l][r]=t}return this.grid}}])&&m(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}();function g(t){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},g(t)}function b(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=Array(e);r<e;r++)n[r]=t[r];return n}function C(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,w(n.key),n)}}function w(t){var e=function(t,e){if("object"!=g(t)||!t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!=g(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==g(e)?e:e+""}var x=function(){return t=function t(e,r){if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),"player one"!==e&&"player two"!==e&&"computer"!==e)throw new Error("argument should be player or computer");this.type=e,this.gameBoard=new r,this.memory=[],this.hitStack=[]},(e=[{key:"getRandomNum",value:function(){return Math.floor(10*Math.random())}},{key:"searchMove",value:function(t){for(var e=this.memory,r=0;r<e.length;r++)if(t.toString()===e[r].toString())return!0;return!1}},{key:"updateHitStack",value:function(t){var e=this,r=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,o,a,i,c=[],l=!0,u=!1;try{if(a=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=a.call(r)).done)&&(c.push(n.value),c.length!==e);l=!0);}catch(t){u=!0,o=t}finally{try{if(!l&&null!=r.return&&(i=r.return(),Object(i)!==i))return}finally{if(u)throw o}}return c}}(t,e)||function(t,e){if(t){if("string"==typeof t)return b(t,e);var r={}.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?b(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(t,2),n=r[0],o=r[1],a={top:[n+1,o],right:[n,o+1],bottom:[n-1,o],left:[n,o-1]};Object.values(a).forEach((function(t){t[0]<9&&t[0]>=0&&t[1]<9&&t[1]>=0&&e.hitStack.push(t)}))}},{key:"playMove",value:function(t){var e,r=t.gameBoard;if(this.hitStack.length>0){var n=this.hitStack.pop(),o=n[0],a=n[1];if(this.searchMove(n))return this.playMove(t);this.memory.push(n);var i=document.querySelector('#player-one-grid>[data-coordinates="'.concat(o.toString(),", ").concat(a.toString(),'"]'));if(e=r.receiveAttack(o,a),i.classList.add("attacked"),e)return i.classList.add("hit"),r.grid[o][a].isSunk(),r.removeShip(o,a),this.updateHitStack(n),e}else{var c=this.getRandomNum(),l=this.getRandomNum(),u=[c,l];if(this.searchMove([c,l]))return this.playMove(t);this.memory.push(u);var s=document.querySelector('#player-one-grid>[data-coordinates="'.concat(c.toString(),", ").concat(l.toString(),'"]'));if(e=r.receiveAttack(c,l),s.classList.add("attacked"),e)return s.classList.add("hit"),r.grid[c][l].isSunk(),r.removeShip(c,l),this.updateHitStack(u),e}return e}}])&&C(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}();function S(t){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},S(t)}function k(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,E(n.key),n)}}function E(t){var e=function(t,e){if("object"!=S(t)||!t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!=S(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==S(e)?e:e+""}const L=new(function(){return t=function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.mode=null,this.playerOne=null,this.playerTwo=null,this.state=null,this.winner=null},(e=[{key:"startGame",value:function(t){"pvp"===t&&(this.mode=t,this.playerOne=new x("player one",A),this.playerTwo=new x("player two",A),this.statePlayerOnePlacement()),"pve"===t&&(this.mode=t,this.playerOne=new x("player one",A),this.playerTwo=new x("computer",A),this.statePlayerOnePlacement())}},{key:"restartGame",value:function(){this.mode=null,this.playerOne=null,this.playerTwo=null,this.state=null,this.winner=null}},{key:"statePlayerOnePlacement",value:function(){this.state=0}},{key:"statePlayerTwoPlacement",value:function(){this.state=1}},{key:"stateComputerPlacement",value:function(){this.state=2}},{key:"statePlayerOneTurn",value:function(){this.state=3}},{key:"statePlayerTwoTurn",value:function(){this.state=4}},{key:"stateComputerTurn",value:function(){this.state=5}},{key:"stateEndGame",value:function(t){this.state=6,this.winner=t}}])&&k(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}());function O(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,n=document.querySelector("#turn-status"),o=document.querySelector("#game-status");switch(t.state){case 0:n.textContent="Player one",o.textContent="Ship placement",!1===e&&1===r&&(o.textContent="Invalid placement. Ship over grid"),!1===e&&2===r&&(o.textContent="Invalid placement. Ship over occupied space"),!1===e&&3===r&&(o.textContent="Missing ship");break;case 1:n.textContent="Player two",o.textContent="Ship placement",!1===e&&1===r&&(o.textContent="Invalid placement. Ship over grid"),!1===e&&2===r&&(o.textContent="Invalid placement. Ship over occupied space"),!1===e&&3===r&&(o.textContent="Missing ship");break;case 2:n.textContent="Computer",o.textContent="Randomizing placement";break;case 3:n.textContent="Player one's turn.",o.textContent="",void 0===e&&1===r&&(o.textContent="Cell already attacked!"),void 0===e&&2===r&&(o.textContent="Wrong grid."),!0===e&&0===r&&(o.textContent="Hit!"),!0===e&&"destroyer"===r&&(o.textContent="Hit! Destroyer destroyed!"),!0===e&&"submarine"===r&&(o.textContent="Hit! Submarine destroyed!"),!0===e&&"cruiser"===r&&(o.textContent="Hit! Cruiser destroyed!"),!0===e&&"carrier"===r&&(o.textContent="Hit! Carrier destroyed!"),!0===e&&"battleship"===r&&(o.textContent="Hit! Battleship destroyed!"),!1===e&&("pvp"===t.mode?(n.textContent="Player two's turn.",o.textContent="Miss!"):(n.textContent="Computer's turn.",o.textContent="Miss!"));break;case 4:n.textContent="Player two's turn.",void 0===e&&1===r&&(o.textContent="Cell already attacked!"),void 0===e&&2===r&&(o.textContent="Wrong grid."),!0===e&&0===r&&(o.textContent="Hit!"),!0===e&&"destroyer"===r&&(o.textContent="Hit! Destroyer destroyed!"),!0===e&&"submarine"===r&&(o.textContent="Hit! Submarine destroyed!"),!0===e&&"cruiser"===r&&(o.textContent="Hit! Cruiser destroyed!"),!0===e&&"carrier"===r&&(o.textContent="Hit! Carrier destroyed!"),!0===e&&"battleship"===r&&(o.textContent="Hit! Battleship destroyed!"),!1===e&&(n.textContent="Player one's turn.",o.textContent="Miss!");break;case 5:n.textContent="Computer's turn.",!0===e&&0===r&&(o.textContent="Hit!"),!0===e&&"destroyer"===r&&(o.textContent="Hit! Destroyer destroyed!"),!0===e&&"submarine"===r&&(o.textContent="Hit! Submarine destroyed!"),!0===e&&"cruiser"===r&&(o.textContent="Hit! Cruiser destroyed!"),!0===e&&"carrier"===r&&(o.textContent="Hit! Carrier destroyed!"),!0===e&&"battleship"===r&&(o.textContent="Hit! Battleship destroyed!"),!1===e&&(n.textContent="Player one's turn.",o.textContent="Miss!");break;case 6:n.textContent="",o.textContent="";break;default:n.textContent="undefined",o.textContent="undefined"}}function I(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,o,a,i,c=[],l=!0,u=!1;try{if(a=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=a.call(r)).done)&&(c.push(n.value),c.length!==e);l=!0);}catch(t){u=!0,o=t}finally{try{if(!l&&null!=r.return&&(i=r.return(),Object(i)!==i))return}finally{if(u)throw o}}return c}}(t,e)||function(t,e){if(t){if("string"==typeof t)return P(t,e);var r={}.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?P(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function P(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=Array(e);r<e;r++)n[r]=t[r];return n}var q;function j(t){t.preventDefault();var e=I(t.target.dataset.coordinates.split(", "),2),r=e[0],n=e[1],o=I(q,3),a=o[0];!function(t,e,r,n,o){var a=[];if("horizontal"===n)for(var i=0;i<r;i++){var c=Math.floor(e)+i,l=void 0;if(l=0===L.state?document.querySelector('#player-one-grid>div[data-coordinates="'.concat(t,", ").concat(c,'"]')):document.querySelector('#player-two-grid>div[data-coordinates="'.concat(t,", ").concat(c,'"]')),c>9||l.classList.contains("filled")){a.length>0&&a.forEach((function(t){return t.classList.add("occupied")})),O(L,!1,c>9?1:2);break}O(L),a.push(l),l.classList.add("dragover"),l.setAttribute("data-ship",o)}else for(var u=0;u<r;u++){var s=Math.floor(t)+u,d=void 0;if(d=0===L.state?document.querySelector('#player-one-grid>div[data-coordinates="'.concat(s,", ").concat(e,'"]')):document.querySelector('#player-two-grid>div[data-coordinates="'.concat(s,", ").concat(e,'"]')),s>9||d.classList.contains("filled")){a.length>0&&a.forEach((function(t){return t.classList.add("occupied")})),O(L,!1,s>9?1:2);break}O(L),a.push(d),d.classList.add("dragover"),d.setAttribute("data-ship",o)}}(r,n,o[1],a,o[2])}function T(t){t.preventDefault();var e=I(t.target.dataset.coordinates.split(", "),2),r=e[0],n=e[1],o=I(q,3),a=o[0];!function(t,e,r,n,o){if("horizontal"===n)for(var a=0;a<r;a++){var i=Math.floor(e)+a,c=void 0;if(c=0===L.state?document.querySelector('#player-one-grid>div[data-coordinates="'.concat(t,", ").concat(i,'"]')):document.querySelector('#player-two-grid>div[data-coordinates="'.concat(t,", ").concat(i,'"]')),i>9||c.classList.contains("filled"))break;c.classList.remove("occupied"),c.classList.remove("dragover"),c.removeAttribute("data-ship",o)}else for(var l=0;l<r;l++){var u=Math.floor(t)+l,s=void 0;if(s=0===L.state?document.querySelector('#player-one-grid>div[data-coordinates="'.concat(u,", ").concat(e,'"]')):document.querySelector('#player-two-grid>div[data-coordinates="'.concat(u,", ").concat(e,'"]')),u>9||s.classList.contains("filled"))break;s.classList.remove("occupied"),s.classList.remove("dragover"),s.removeAttribute("data-ship",o)}}(r,n,o[1],a,o[2])}function B(t){t.dataTransfer.clearData();var e=t.target,r=document.querySelector("#direction-btn").value;e.classList.add("dragging");var n=[r,e.dataset.length,e.dataset.type];t.dataTransfer.setData("text/plain",n),q=n,document.querySelectorAll(".dropzone").forEach((function(t){t.addEventListener("dragover",j),t.addEventListener("dragleave",T)}))}function M(t){t.target.removeAttribute("class")}function G(){document.querySelectorAll("div[draggable]").forEach((function(t){t.addEventListener("dragstart",B),t.addEventListener("dragend",M)}))}function J(t){t.preventDefault();var e,r,n=t.dataTransfer.getData("text").split(","),o=n[2],a=Math.floor(n[1]),i=document.querySelectorAll(".dragover");a===i.length?(document.querySelectorAll(".dragover").forEach((function(t){t.classList.remove("dropzone","dragover"),t.classList.add("filled"),t.removeEventListener("dragover",j),t.removeEventListener("dragleave",T)})),e=o,!0===(r=document.querySelector("div[data-type=".concat(e,"]"))).draggable&&(r.removeAttribute("draggable"),r.classList.remove("dragging"),r.removeEventListener("dragstart",B),r.removeEventListener("dragend",M))):i.forEach((function(t){return t.classList.remove("dragover","occupied","dragging")})),document.querySelectorAll(".dropzone").forEach((function(t){t.removeEventListener("dragover",j),t.removeEventListener("dragleave",T)}))}function H(t){return function(t){if(Array.isArray(t))return z(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return z(t,e);var r={}.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?z(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function z(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=Array(e);r<e;r++)n[r]=t[r];return n}function U(t){"player one"===t?H(document.getElementById("player-one-grid").children).forEach((function(t){t.classList.add("dropzone"),t.addEventListener("drop",J)})):H(document.getElementById("player-two-grid").children).forEach((function(t){t.classList.add("dropzone"),t.addEventListener("drop",J)}))}function _(t){"player one"===t?H(document.getElementById("player-one-grid").children).forEach((function(t){t.classList.remove("dropzone"),t.classList.remove("filled"),t.removeAttribute("data-ship"),t.removeEventListener("drop",J)})):(console.log(t),H(document.getElementById("player-two-grid").children).forEach((function(t){t.classList.remove("dropzone"),t.classList.remove("filled"),t.removeAttribute("data-ship"),t.removeEventListener("drop",J)})))}function N(t){"horizontal"===t.target.value?(t.target.value="vertical",t.target.textContent="vertical"):"vertical"===t.target.value&&(t.target.value="horizontal",t.target.textContent="horizontal")}function Y(){document.querySelector(".btn-direction").addEventListener("click",N)}var R=document.querySelectorAll(".ships"),W=document.querySelectorAll(".direction-btn-wrapper"),D=[["destroyer",2],["submarine",3],["cruiser",3],["carrier",5],["battleship",4]];function F(t){var e=document.createElement("div"),r=document.createElement("div");return e.appendChild(r),r.textContent=t[0],r.setAttribute("draggable",!0),r.setAttribute("data-length",t[1]),r.setAttribute("data-type",t[0]),e.classList.add("ship-elem","".concat(t[0],"-wrapper")),e}function Q(t){if("player one"===t)for(var e=0;e<5;e++){var r=F(D[e]);R[0].appendChild(r)}if("player two"===t||"computer"===t)for(var n=0;n<5;n++){var o=F(D[n]);R[1].appendChild(o)}}function K(){var t=document.createElement("button");return t.classList.add("btn-direction"),t.id="direction-btn",t.setAttribute("value","horizontal"),t.textContent="horizontal",t}function $(t){if("player one"===t){var e=K();W[0].appendChild(e),Y()}if("player two"===t||"computer"===t){var r=K();W[1].appendChild(r),Y()}}function V(t){return V="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},V(t)}function X(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,Z(n.key),n)}}function Z(t){var e=function(t,e){if("object"!=V(t)||!t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!=V(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==V(e)?e:e+""}var tt=function(){return t=function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.length=e,this.type=r,this.hits=0,this.sunk=!1},(e=[{key:"hit",value:function(){this.hits+=1}},{key:"isSunk",value:function(){return(this.length===this.hits||this.length<this.hits)&&(this.sunk=!0),this.sunk}}])&&X(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}();function et(){var t=[];return D.forEach((function(e){var r=new tt(e[1],e[0]);t.push(r)})),t}function rt(t){var e=document.querySelectorAll(".filled"),r=t.gameBoard,n=et();return 17===e.length&&(e.forEach((function(t){var e,o=t.getAttribute("data-coordinates").split(", "),a=t.getAttribute("data-ship"),i=(e=a,n.find((function(t){return t.type===e}))),c=o[0],l=o[1];r.placeShip(i,c,l)})),!0)}function nt(t){for(var e=t.children.length,r=0;r<e;r++)t.removeChild(t.firstElementChild)}function ot(t){var e=document.querySelectorAll(".ship-container");if("player one"===t){var r=e[0].children,n=r[0],o=r[1];nt(n),nt(o)}if("player two"===t||"computer"===t){var a=e[1].children,i=a[0],c=a[1];nt(i),nt(c)}}var at=document.querySelector("#game-dialog"),it=document.querySelector("#clear-btn-wrapper"),ct=document.querySelector("#continue-btn-wrapper"),lt=document.querySelector("#play-btn-wrapper");function ut(t){var e=document.createElement("button");t.appendChild(e),"clear-btn-wrapper"===t.id&&(e.setAttribute("id","clear-btn"),e.textContent="Clear"),"continue-btn-wrapper"===t.id&&(e.setAttribute("id","continue-btn"),e.textContent="Continue")}function st(){var t=document.createElement("button");lt.appendChild(t),t.setAttribute("id","play-btn"),t.textContent="Play",t.addEventListener("click",(function(){at.showModal()}))}function dt(){ut(it),ut(ct),document.querySelector("#play-btn").remove()}function ft(){var t=document.querySelector("#clear-btn"),e=document.querySelector("#continue-btn");t.remove(),e.remove()}st();var pt=L,ht=document.querySelector("#endgame-dialog"),yt=document.querySelector("#game-dialog");function mt(t){return mt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},mt(t)}function vt(){vt=function(){return e};var t,e={},r=Object.prototype,n=r.hasOwnProperty,o=Object.defineProperty||function(t,e,r){t[e]=r.value},a="function"==typeof Symbol?Symbol:{},i=a.iterator||"@@iterator",c=a.asyncIterator||"@@asyncIterator",l=a.toStringTag||"@@toStringTag";function u(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{u({},"")}catch(t){u=function(t,e,r){return t[e]=r}}function s(t,e,r,n){var a=e&&e.prototype instanceof v?e:v,i=Object.create(a.prototype),c=new P(n||[]);return o(i,"_invoke",{value:E(t,r,c)}),i}function d(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}e.wrap=s;var f="suspendedStart",p="suspendedYield",h="executing",y="completed",m={};function v(){}function A(){}function g(){}var b={};u(b,i,(function(){return this}));var C=Object.getPrototypeOf,w=C&&C(C(q([])));w&&w!==r&&n.call(w,i)&&(b=w);var x=g.prototype=v.prototype=Object.create(b);function S(t){["next","throw","return"].forEach((function(e){u(t,e,(function(t){return this._invoke(e,t)}))}))}function k(t,e){function r(o,a,i,c){var l=d(t[o],t,a);if("throw"!==l.type){var u=l.arg,s=u.value;return s&&"object"==mt(s)&&n.call(s,"__await")?e.resolve(s.__await).then((function(t){r("next",t,i,c)}),(function(t){r("throw",t,i,c)})):e.resolve(s).then((function(t){u.value=t,i(u)}),(function(t){return r("throw",t,i,c)}))}c(l.arg)}var a;o(this,"_invoke",{value:function(t,n){function o(){return new e((function(e,o){r(t,n,e,o)}))}return a=a?a.then(o,o):o()}})}function E(e,r,n){var o=f;return function(a,i){if(o===h)throw Error("Generator is already running");if(o===y){if("throw"===a)throw i;return{value:t,done:!0}}for(n.method=a,n.arg=i;;){var c=n.delegate;if(c){var l=L(c,n);if(l){if(l===m)continue;return l}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(o===f)throw o=y,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);o=h;var u=d(e,r,n);if("normal"===u.type){if(o=n.done?y:p,u.arg===m)continue;return{value:u.arg,done:n.done}}"throw"===u.type&&(o=y,n.method="throw",n.arg=u.arg)}}}function L(e,r){var n=r.method,o=e.iterator[n];if(o===t)return r.delegate=null,"throw"===n&&e.iterator.return&&(r.method="return",r.arg=t,L(e,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n+"' method")),m;var a=d(o,e.iterator,r.arg);if("throw"===a.type)return r.method="throw",r.arg=a.arg,r.delegate=null,m;var i=a.arg;return i?i.done?(r[e.resultName]=i.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=t),r.delegate=null,m):i:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,m)}function O(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function I(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function P(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(O,this),this.reset(!0)}function q(e){if(e||""===e){var r=e[i];if(r)return r.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,a=function r(){for(;++o<e.length;)if(n.call(e,o))return r.value=e[o],r.done=!1,r;return r.value=t,r.done=!0,r};return a.next=a}}throw new TypeError(mt(e)+" is not iterable")}return A.prototype=g,o(x,"constructor",{value:g,configurable:!0}),o(g,"constructor",{value:A,configurable:!0}),A.displayName=u(g,l,"GeneratorFunction"),e.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===A||"GeneratorFunction"===(e.displayName||e.name))},e.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,g):(t.__proto__=g,u(t,l,"GeneratorFunction")),t.prototype=Object.create(x),t},e.awrap=function(t){return{__await:t}},S(k.prototype),u(k.prototype,c,(function(){return this})),e.AsyncIterator=k,e.async=function(t,r,n,o,a){void 0===a&&(a=Promise);var i=new k(s(t,r,n,o),a);return e.isGeneratorFunction(r)?i:i.next().then((function(t){return t.done?t.value:i.next()}))},S(x),u(x,l,"Generator"),u(x,i,(function(){return this})),u(x,"toString",(function(){return"[object Generator]"})),e.keys=function(t){var e=Object(t),r=[];for(var n in e)r.push(n);return r.reverse(),function t(){for(;r.length;){var n=r.pop();if(n in e)return t.value=n,t.done=!1,t}return t.done=!0,t}},e.values=q,P.prototype={constructor:P,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(I),!e)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var r=this;function o(n,o){return c.type="throw",c.arg=e,r.next=n,o&&(r.method="next",r.arg=t),!!o}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],c=i.completion;if("root"===i.tryLoc)return o("end");if(i.tryLoc<=this.prev){var l=n.call(i,"catchLoc"),u=n.call(i,"finallyLoc");if(l&&u){if(this.prev<i.catchLoc)return o(i.catchLoc,!0);if(this.prev<i.finallyLoc)return o(i.finallyLoc)}else if(l){if(this.prev<i.catchLoc)return o(i.catchLoc,!0)}else{if(!u)throw Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return o(i.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var a=o;break}}a&&("break"===t||"continue"===t)&&a.tryLoc<=e&&e<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=t,i.arg=e,a?(this.method="next",this.next=a.finallyLoc,m):this.complete(i)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),m},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),I(r),m}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var o=n.arg;I(r)}return o}}throw Error("illegal catch attempt")},delegateYield:function(e,r,n){return this.delegate={iterator:q(e),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=t),m}},e}function At(t,e,r,n,o,a,i){try{var c=t[a](i),l=c.value}catch(t){return void r(t)}c.done?e(l):Promise.resolve(l).then(n,o)}var gt=L;function bt(t){var e;gt.stateEndGame(t),ht.showModal(),function(t){var e=document.createElement("p");e.textContent="Winner ".concat(t,"!"),document.querySelector("#announcement-wrapper").append(e)}(pt.winner),(e=document.createElement("button")).textContent="Play Again",e.addEventListener("click",(function(){ht.close(),yt.showModal()})),document.querySelector("#restart-btn-wrapper").append(e),pt.restartGame(),st()}function Ct(t){return new Promise((function(e){setTimeout((function(){var r=gt.playerTwo.playMove(t);e(r)}),800)}))}function wt(t){if(4===gt.state){var e=t.target,r=e.dataset.coordinates.split(", "),n=Math.floor(r[0]),o=Math.floor(r[1]),a=gt.playerOne.gameBoard;if(e.classList.contains("attacked"))return console.log("grid cell already attacked.");if(e.classList.add("attacked"),a.receiveAttack(n,o)){e.classList.add("hit");var i=a.grid[n][o],c=i.isSunk();O(gt,!0,0),c&&O(gt,!0,i.type),a.removeShip(n,o)}else O(gt,!1),gt.statePlayerOneTurn();a.scanBoard()&&("pvp"===gt.mode?bt("Player Two"):bt("Computer"))}}function xt(t){return St.apply(this,arguments)}function St(){var t;return t=vt().mark((function t(e){var r,n,o,a,i,c,l;return vt().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(3!==gt.state){t.next=42;break}if(r=e.target,n=r.dataset.coordinates.split(", "),o=Math.floor(n[0]),a=Math.floor(n[1]),i=gt.playerTwo.gameBoard,!r.classList.contains("attacked")){t.next=8;break}return t.abrupt("return",console.log("grid cell already attacked."));case 8:if(r.classList.add("attacked"),!i.receiveAttack(o,a)){t.next=19;break}r.classList.add("hit"),c=i.grid[o][a],l=c.isSunk(),O(gt,!0,0),l&&O(gt,!0,c.type),i.removeShip(o,a),t.next=40;break;case 19:if("pvp"!==gt.mode){t.next=24;break}O(gt,!1),gt.statePlayerTwoTurn(),t.next=40;break;case 24:gt.stateComputerTurn(),O(gt,!1);case 26:return O(gt),t.next=30,Ct(gt.playerOne);case 30:if(t.sent){t.next=33;break}return t.abrupt("break",39);case 33:if(!gt.playerOne.gameBoard.scanBoard()){t.next=37;break}return bt("Computer"),t.abrupt("break",39);case 37:t.next=26;break;case 39:gt.statePlayerOneTurn();case 40:i.scanBoard()&&bt("Player One");case 42:case"end":return t.stop()}}),t)})),St=function(){var e=this,r=arguments;return new Promise((function(n,o){var a=t.apply(e,r);function i(t){At(a,n,o,i,c,"next",t)}function c(t){At(a,n,o,i,c,"throw",t)}i(void 0)}))},St.apply(this,arguments)}function kt(){var t,e;L.statePlayerOneTurn(),t=document.querySelectorAll("#player-one-grid>.grid-elem"),e=document.querySelectorAll("#player-two-grid>.grid-elem"),t.forEach((function(t){t.addEventListener("click",wt)})),e.forEach((function(t){t.addEventListener("click",xt)}))}function Et(){document.querySelector("#clear-btn").addEventListener("click",(function(){document.querySelectorAll(".grid-elem.filled").forEach((function(t){t.classList.remove("filled"),t.classList.add("dropzone"),t.removeAttribute("data-ship")})),document.querySelectorAll("div[data-type]").forEach((function(t){t.setAttribute("draggable",!0)})),G()}))}function Lt(){var t,e,r,n=L.mode,o=L.playerOne,a=L.playerTwo;if("pvp"===n){if(0===L.state&&rt(o))return ot(o.type),_(o.type),function(){var t=L.playerTwo;Q(t.type),$(t.type),U(t.type),G(),Et()}(),L.statePlayerTwoPlacement(),void O(L);1===L.state&&rt(a)&&(ot(a.type),_(a.type),L.statePlayerOneTurn(),O(L),kt(),ft())}"pve"===n&&0===L.state&&rt(o)&&(ot(o.type),_(o.type),L.statePlayerOneTurn(),t=a,e=et(),r=t.gameBoard,e.forEach((function(t){r.placeRandomShip(t)})),O(L),kt(),ft())}function Ot(){document.querySelector("#continue-btn").addEventListener("click",Lt)}function It(){document.querySelectorAll(".attacked").forEach((function(t){t.classList.remove("attacked"),t.classList.contains("hit")&&t.classList.remove("hit")}))}function Pt(){document.querySelector("#announcement-wrapper").firstChild.remove(),document.querySelector("#restart-btn-wrapper").firstChild.remove()}var qt=document.querySelector("#game-dialog"),jt=document.querySelector(".pvp-btn"),Tt=document.querySelector(".pve-btn");jt.addEventListener("click",(function(t){var e,r;e=t.target.value,r=qt,L.startGame(e),Q(L.playerOne.type),$(L.playerOne.type),dt(),U(L.playerOne.type),G(),Et(),Ot(),O(L),It(),Pt(),r.close()})),Tt.addEventListener("click",(function(t){var e,r;e=t.target.value,r=qt,L.startGame(e),Q(L.playerOne.type),$(L.playerOne.type),dt(),U(L.playerOne.type),G(),Et(),Ot(L.mode,L.playerOne),O(L),It(),Pt(),r.close()})),r(421)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,